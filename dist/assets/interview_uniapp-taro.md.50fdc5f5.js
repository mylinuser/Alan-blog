import{_ as t,o,c as r,Q as a}from"./chunks/framework.82e0a936.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/uniapp-taro.md","filePath":"interview/uniapp-taro.md","lastUpdated":1694189773000}'),n={name:"interview/uniapp-taro.md"},e=a('<h2 id="uniapp和taro的区别" tabindex="-1">uniapp和Taro的区别 <a class="header-anchor" href="#uniapp和taro的区别" aria-label="Permalink to &quot;uniapp和Taro的区别&quot;">​</a></h2><ol><li>首先就是架构上的差异。UNI-APP使用的是<strong>VUE框架</strong>，而Taro使用<strong>React框架</strong>。</li><li>在IDE（开发工具）方面，Taro比较自由，没有明确推荐的IDE，但是在vscode中提供了支持的d.ts。但是开发者也可以根据自己的习惯自由选择。而UNIAPP方面则是明确推荐了由自家开发的<strong>HBuilderX</strong>。由于都是自家的产品，因此UNI-APP可以不用在HBuilderX配置环境，同时HBuilderX也针对UNI-APP做出了很多优化。</li><li>在运行的性能方面，Taro更注重于<strong>性能的优化</strong>，而UNIAPP需要本身注意<strong>代码优化</strong></li><li>社区的生态和氛围对于一款软件也是非常重要的。如果一款软件有一个良好的交流氛围和代码提交量，就会让软件的生命力更加旺盛。Taro主要在<strong>Github Issues</strong>和<strong>微信群</strong>的方式交流问题。因此社区主要植根于GitHub。而UNIAPP的开发者DCloud为UNIAPP专门建立了<strong>论坛和插件市场</strong>，让开发者可以在论坛中交流问题。而插件市场允许开发者上传完整的UNIAPP插件，以收费或者免费的方式提供。</li><li>案例的数量可以体现过去使用该框架发布上线的产品的体量和规模。其中Taro官网中的案例以<strong>微信小程序</strong>为主要项目。而UNIAPP的案例页面则各种方面的<strong>APP、小程序以及H5</strong>都有。DCloud还专门建立了新冠疫情产品专页来展示利用UNIAPP框架开发的支援新冠相关的成功案例。</li></ol>',2),s=[e];function i(l,p,P,_,d,c){return o(),r("div",null,s)}const I=t(n,[["render",i]]);export{g as __pageData,I as default};
