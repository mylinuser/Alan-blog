import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.82820f36.js";const D=JSON.parse('{"title":"前端性能指标","description":"","frontmatter":{},"headers":[],"relativePath":"study/performance.md","filePath":"study/performance.md","lastUpdated":1719848220000}'),p={name:"study/performance.md"},o=l(`<h1 id="前端性能指标" tabindex="-1">前端性能指标 <a class="header-anchor" href="#前端性能指标" aria-label="Permalink to &quot;前端性能指标&quot;">​</a></h1><h2 id="如何来衡量前端性能指标" tabindex="-1">如何来衡量前端性能指标？ <a class="header-anchor" href="#如何来衡量前端性能指标" aria-label="Permalink to &quot;如何来衡量前端性能指标？&quot;">​</a></h2><p><code>Google</code> 的开发者早就提出了一个 <code>RAIL</code> 模型 来解决这个问题。 <code>RAIL</code> 是 <code>Response</code>、<code>Animation</code>、<code>Idle</code> 和 <code>Load</code> 的首字母缩写，由 <code>Google Chrome</code> 团队于 2015 年提出的性能模型，用于提升浏览器内的用户体验和性能。</p><p><code>RAIL</code> 把交互分为四个阶段：页面加载、空闲、响应用户输入、滚动和动画。按首字母缩写顺序，其主要原则是：</p><ul><li><strong>响应</strong>：应该尽可能快速的响应用户，应该在 100ms 或者 100ms 以内响应用户输入。</li><li><strong>动画</strong>：在展示动画的时候，每一帧应该以 16ms 进行渲染，这样可以保持动画效果的一致性，并且避免卡顿。</li><li><strong>空闲</strong>：当使用 JavaScript 主线程的时候，应该把任务划分到执行时间小于 50ms 的片段中去，这样可以释放线程以进行用户交互。</li><li><strong>加载</strong>：应该在小于 1s 的时间内加载完成你的网站，并可以进行用户交互。</li></ul><h3 id="用于衡量性能指标的主要有fp、fcp、lcp、cls、tti、fid、tbt、fmp这几个-下面分别介绍他们的意义和计算方法" tabindex="-1">用于衡量性能指标的主要有<code>FP</code>、<code>FCP</code>、<code>LCP</code>、<code>CLS</code>、<code>TTI</code>、<code>FID</code>、<code>TBT</code>、<code>FMP</code>这几个，下面分别介绍他们的意义和计算方法 <a class="header-anchor" href="#用于衡量性能指标的主要有fp、fcp、lcp、cls、tti、fid、tbt、fmp这几个-下面分别介绍他们的意义和计算方法" aria-label="Permalink to &quot;用于衡量性能指标的主要有\`FP\`、\`FCP\`、\`LCP\`、\`CLS\`、\`TTI\`、\`FID\`、\`TBT\`、\`FMP\`这几个，下面分别介绍他们的意义和计算方法&quot;">​</a></h3><h2 id="衡量标准" tabindex="-1">衡量标准 <a class="header-anchor" href="#衡量标准" aria-label="Permalink to &quot;衡量标准&quot;">​</a></h2><table><thead><tr><th>指标</th><th>好</th><th>中等</th><th>差</th></tr></thead><tbody><tr><td>FP</td><td>小于 1.8 秒</td><td>大于 1.8 秒小于 3.0 秒</td><td>大于 3.0 秒</td></tr><tr><td>FCP</td><td>小于 1.8 秒</td><td>大于 1.8 秒小于 3.0 秒</td><td>大于 3.0 秒</td></tr><tr><td>LCP</td><td>小于 2.5 秒</td><td>大于 2.5 秒小于 4.0 秒</td><td>大于 4.0 秒</td></tr><tr><td>CLS</td><td>小于 0.1</td><td>大于 0.1 小于 0.25</td><td>大于 0.25</td></tr><tr><td>TTI</td><td>0-3.8 秒</td><td>3.9-7.3 秒</td><td>7.3 秒以上</td></tr><tr><td>FID</td><td>0-100 毫秒</td><td>100-300 毫秒</td><td>300 毫秒以上</td></tr><tr><td>TBT</td><td>0-200 毫秒</td><td>200-600 毫秒</td><td>600 毫秒以上</td></tr><tr><td>FMP</td><td>0-2 秒</td><td>2-4 秒</td><td>4 秒以上</td></tr></tbody></table><h2 id="fp" tabindex="-1">FP <a class="header-anchor" href="#fp" aria-label="Permalink to &quot;FP&quot;">​</a></h2><p>First Paint 首次绘制，指浏览器从开始请求网站内容（导航阶段）到首次向屏幕绘制像素点的时间，刚到 Painting 阶段，所以 FP 也可以理解为是白屏时间。</p><p>FP 的计算方法 1：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">performance</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntriesByType</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">].</span><span style="color:#BD976A;">startTime</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">performance</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntriesByType</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">].</span><span style="color:#B07D48;">startTime</span><span style="color:#999999;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>window.performance.getEntriesByType(&#39;paint&#39;)</code>方法会返回一个数组对象，第一项是 FP，第二项是 FCP</p><p>FP 的计算方法 2：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">observerWithPromise</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#B8A965;">Promise</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">PerformanceObserverEntryList</span><span style="color:#666666;">&gt;(</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#666666;">(</span><span style="color:#BD976A;">resolve</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">reject</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">    new </span><span style="color:#80A665;">PerformanceObserver</span><span style="color:#666666;">(</span><span style="color:#BD976A;">resolve</span><span style="color:#666666;">).</span><span style="color:#80A665;">observe</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">entryTypes</span><span style="color:#666666;">: [</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#666666;">    });</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">observerWithPromise</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entryList</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">entryList</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntries</span><span style="color:#666666;">().</span><span style="color:#80A665;">filter</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first-paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">})[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">startTime</span><span style="color:#666666;">));</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">observerWithPromise</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#998418;">Promise</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">PerformanceObserverEntryList</span><span style="color:#999999;">&gt;(</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#999999;">(</span><span style="color:#B07D48;">resolve</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">reject</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">    new </span><span style="color:#59873A;">PerformanceObserver</span><span style="color:#999999;">(</span><span style="color:#B07D48;">resolve</span><span style="color:#999999;">).</span><span style="color:#59873A;">observe</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">entryTypes</span><span style="color:#999999;">: [</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#999999;">    });</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">observerWithPromise</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entryList</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">entryList</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntries</span><span style="color:#999999;">().</span><span style="color:#59873A;">filter</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">name</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first-paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">startTime</span><span style="color:#999999;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="fcp" tabindex="-1">FCP <a class="header-anchor" href="#fcp" aria-label="Permalink to &quot;FCP&quot;">​</a></h2><p>首次内容绘制 (FCP) 用于衡量从用户首次导航到网页到网页内容的任何部分在屏幕上呈现的时间。对于此指标，“内容”是指文字、图片（包括背景图片）、<code>svg</code> 元素或非白色的 <code>canvas</code> 元素。</p><p>FCP 的计算方法 1：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">performance</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntriesByType</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)[</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">].</span><span style="color:#BD976A;">startTime</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">performance</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntriesByType</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)[</span><span style="color:#2F798A;">1</span><span style="color:#999999;">].</span><span style="color:#B07D48;">startTime</span><span style="color:#999999;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>window.performance.getEntriesByType(&#39;paint&#39;)</code>方法会返回一个数组对象，第一项是 FP，第二项是 FCP</p><p>FCP 的计算方法 2：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">observerWithPromise</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#B8A965;">Promise</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">PerformanceObserverEntryList</span><span style="color:#666666;">&gt;(</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#666666;">(</span><span style="color:#BD976A;">resolve</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">reject</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">    new </span><span style="color:#80A665;">PerformanceObserver</span><span style="color:#666666;">(</span><span style="color:#BD976A;">resolve</span><span style="color:#666666;">).</span><span style="color:#80A665;">observe</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">entryTypes</span><span style="color:#666666;">: [</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#666666;">    });</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">observerWithPromise</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entryList</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">entryList</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntries</span><span style="color:#666666;">().</span><span style="color:#80A665;">filter</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first-contentful-paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">})[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">startTime</span><span style="color:#666666;">));</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">observerWithPromise</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#998418;">Promise</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">PerformanceObserverEntryList</span><span style="color:#999999;">&gt;(</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#999999;">(</span><span style="color:#B07D48;">resolve</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">reject</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">    new </span><span style="color:#59873A;">PerformanceObserver</span><span style="color:#999999;">(</span><span style="color:#B07D48;">resolve</span><span style="color:#999999;">).</span><span style="color:#59873A;">observe</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">entryTypes</span><span style="color:#999999;">: [</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#999999;">    });</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">observerWithPromise</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entryList</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">entryList</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntries</span><span style="color:#999999;">().</span><span style="color:#59873A;">filter</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">name</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first-contentful-paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">startTime</span><span style="color:#999999;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="lcp" tabindex="-1">LCP <a class="header-anchor" href="#lcp" aria-label="Permalink to &quot;LCP&quot;">​</a></h2><p><code>Largest Contentful Paint</code>，最大内容绘制，指可视区内容最大的可见元素出现在屏幕上的时间，衡量加载性能的核心指标。</p><p>LCP 的计算方法：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">observer</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">PerformanceObserver</span><span style="color:#666666;">((</span><span style="color:#BD976A;">list</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">  const </span><span style="color:#BD976A;">entries</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">list</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntries</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#CB7676;">  const </span><span style="color:#BD976A;">lastEntry</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">entries</span><span style="color:#666666;">[</span><span style="color:#BD976A;">entries</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#CB7676;"> - </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">];</span><span style="color:#CB7676;"> </span><span style="color:#758575DD;">// Use the latest LCP candidate</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">LCP:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">lastEntry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">startTime</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">lastEntry</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#BD976A;">observer</span><span style="color:#666666;">.</span><span style="color:#80A665;">observe</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">type</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">largest-contentful-paint</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">buffered</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span><span style="color:#666666;"> });</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">observer</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">PerformanceObserver</span><span style="color:#999999;">((</span><span style="color:#B07D48;">list</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">  const </span><span style="color:#B07D48;">entries</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">list</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntries</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#AB5959;">  const </span><span style="color:#B07D48;">lastEntry</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">entries</span><span style="color:#999999;">[</span><span style="color:#B07D48;">entries</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#AB5959;"> - </span><span style="color:#2F798A;">1</span><span style="color:#999999;">];</span><span style="color:#AB5959;"> </span><span style="color:#A0ADA0;">// Use the latest LCP candidate</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">LCP:</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">lastEntry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">startTime</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">lastEntry</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#B07D48;">observer</span><span style="color:#999999;">.</span><span style="color:#59873A;">observe</span><span style="color:#999999;">({ </span><span style="color:#998418;">type</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">largest-contentful-paint</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#998418;">buffered</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="cls" tabindex="-1">CLS <a class="header-anchor" href="#cls" aria-label="Permalink to &quot;CLS&quot;">​</a></h2><p>CLS 的计算方法：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">observer</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">PerformanceObserver</span><span style="color:#666666;">((</span><span style="color:#BD976A;">list</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#4D9375;">for</span><span style="color:#CB7676;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">entry</span><span style="color:#CB7676;"> of </span><span style="color:#BD976A;">list</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntries</span><span style="color:#666666;">())</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// Count layout shifts without recent user input only</span></span>
<span class="line"><span style="color:#CB7676;">    </span><span style="color:#4D9375;">if</span><span style="color:#CB7676;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">hadRecentInput</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">LayoutShift value:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">value</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">      </span><span style="color:#4D9375;">if</span><span style="color:#CB7676;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">sources</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">        </span><span style="color:#4D9375;">for</span><span style="color:#CB7676;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">const </span><span style="color:#666666;">{</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">node</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">currentRect</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">previousRect</span><span style="color:#CB7676;"> </span><span style="color:#666666;">}</span><span style="color:#CB7676;"> of </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">sources</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#CB7676;">          </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">LayoutShift source:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">node</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">            </span><span style="color:#BD976A;">currentRect</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">            </span><span style="color:#BD976A;">previousRect</span></span>
<span class="line"><span style="color:#666666;">          });</span></span>
<span class="line"><span style="color:#CB7676;">      </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#CB7676;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">observer</span><span style="color:#666666;">.</span><span style="color:#80A665;">observe</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">type</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">layout-shift</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">buffered</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span><span style="color:#666666;"> });</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">observer</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">PerformanceObserver</span><span style="color:#999999;">((</span><span style="color:#B07D48;">list</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#1E754F;">for</span><span style="color:#AB5959;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">entry</span><span style="color:#AB5959;"> of </span><span style="color:#B07D48;">list</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntries</span><span style="color:#999999;">())</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// Count layout shifts without recent user input only</span></span>
<span class="line"><span style="color:#AB5959;">    </span><span style="color:#1E754F;">if</span><span style="color:#AB5959;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">hadRecentInput</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">LayoutShift value:</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">      </span><span style="color:#1E754F;">if</span><span style="color:#AB5959;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">sources</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">        </span><span style="color:#1E754F;">for</span><span style="color:#AB5959;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">const </span><span style="color:#999999;">{</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">node</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">currentRect</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">previousRect</span><span style="color:#AB5959;"> </span><span style="color:#999999;">}</span><span style="color:#AB5959;"> of </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">sources</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#AB5959;">          </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">LayoutShift source:</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">node</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">            </span><span style="color:#B07D48;">currentRect</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">            </span><span style="color:#B07D48;">previousRect</span></span>
<span class="line"><span style="color:#999999;">          });</span></span>
<span class="line"><span style="color:#AB5959;">      </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#AB5959;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">observer</span><span style="color:#999999;">.</span><span style="color:#59873A;">observe</span><span style="color:#999999;">({ </span><span style="color:#998418;">type</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">layout-shift</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#998418;">buffered</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="fid" tabindex="-1">FID <a class="header-anchor" href="#fid" aria-label="Permalink to &quot;FID&quot;">​</a></h2><p><code>FID</code> 衡量的是从用户首次与网页互动（即，点击链接、点按按钮或使用由 <code>JavaScript</code> 提供支持的自定义控件）到浏览器实际能够开始处理事件处理脚本以响应相应互动的时间。</p><p>例如，以下所有 HTML 元素都需要等到主线程上正在进行的任务完成后，才能响应用户互动：</p><ul><li>文本字段、复选框和单选按钮（<code>input</code>、<code>textarea</code>）</li><li>选择下拉菜单 (<code>select</code>)</li><li>链接数 (<code>a</code>)</li></ul><p><code>FID</code>的计算方法：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">PerformanceObserver</span><span style="color:#666666;">((</span><span style="color:#BD976A;">entryList</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">entry</span><span style="color:#CB7676;"> of</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">entryList</span><span style="color:#666666;">.</span><span style="color:#80A665;">getEntries</span><span style="color:#666666;">())</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">delay</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">processingStart</span><span style="color:#CB7676;"> - </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">.</span><span style="color:#BD976A;">startTime</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">FID candidate:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">delay</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">entry</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}).</span><span style="color:#80A665;">observe</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">type</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">first-input</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">buffered</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span><span style="color:#666666;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">onFID</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">web-vitals</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// Measure and log FID as soon as it&#39;s available.</span></span>
<span class="line"><span style="color:#80A665;">onFID</span><span style="color:#666666;">(</span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#BD976A;">log</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">PerformanceObserver</span><span style="color:#999999;">((</span><span style="color:#B07D48;">entryList</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">for</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">entry</span><span style="color:#AB5959;"> of</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">entryList</span><span style="color:#999999;">.</span><span style="color:#59873A;">getEntries</span><span style="color:#999999;">())</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">delay</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">processingStart</span><span style="color:#AB5959;"> - </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">.</span><span style="color:#B07D48;">startTime</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">FID candidate:</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">delay</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">entry</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}).</span><span style="color:#59873A;">observe</span><span style="color:#999999;">({ </span><span style="color:#998418;">type</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">first-input</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#998418;">buffered</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onFID</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">web-vitals</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Measure and log FID as soon as it&#39;s available.</span></span>
<span class="line"><span style="color:#59873A;">onFID</span><span style="color:#999999;">(</span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#B07D48;">log</span><span style="color:#999999;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="tti" tabindex="-1">TTI <a class="header-anchor" href="#tti" aria-label="Permalink to &quot;TTI&quot;">​</a></h2><p><code>Time to Interactive</code>，<code>TTI</code> 指标用于衡量从网页开始加载到其主要子资源加载完成所用的时间，并且能够快速可靠地响应用户输入。</p><p>如需根据网页的性能跟踪记录计算 TTI，请按以下步骤操作：</p><ul><li>从 First Contentful Paint (FCP) 开始。</li><li>向前搜索一个至少 5 秒的静默窗口，其中静默窗口的定义为：没有长任务，且不超过两个进行中的网络 GET 请求。</li><li>向后搜索静默窗口之前的最后一个长任务，如果找不到长任务，则停止在 FCP 处停止。</li><li>TTI 是安静窗口之前的最后一个长任务的结束时间（如果未找到长任务，则与 FCP 值相同）。</li></ul><h3 id="如何衡量-tti" tabindex="-1">如何衡量 TTI? <a class="header-anchor" href="#如何衡量-tti" aria-label="Permalink to &quot;如何衡量 TTI?&quot;">​</a></h3><p><code>TTI</code> 是最好在实验室测量的指标。衡量 <code>TTI</code> 的最佳方法是在您的网站上运行 <code>Lighthouse</code> 性能审核。如需了解使用详情，请参阅有关 <code>TTI</code> 的 <code>Lighthouse</code> 文档。</p><h2 id="tbt" tabindex="-1">TBT <a class="header-anchor" href="#tbt" aria-label="Permalink to &quot;TBT&quot;">​</a></h2><p>总阻塞时间 (<code>TBT</code>) 指标用于衡量在 <code>First Contentful Paint (FCP)</code> 之后主线程被阻塞的时间足以阻止输入响应的总时间。</p><p>默认情况下，<code>Lighthouse</code> 会在可交互时间 (<code>TTI</code>) 后停止监控 <code>TBT</code>，其他一些用于衡量网页加载的实验室工具也会停止监控。请参阅 <code>TBT</code> 与 <code>TTI</code> 的关系？。</p><p>如果有长任务（即在主线程上运行超过 50 毫秒的任务），主线程就会被视为“阻塞”。我们之所以说主线程处于“阻塞”状态，是因为浏览器无法中断正在进行的任务。因此，如果用户在长时间运行的任务过程中与页面交互，浏览器必须等待任务完成后才能响应。</p><p>如果任务时间足够长（超过 50 毫秒），用户很可能会注意到延迟，并认为网页运行缓慢或已损坏。</p><p>对于给定的长时间运行的任务，阻塞时间超过 50 毫秒。网页的总阻塞时间是在测量的时间范围内（通常是针对网页加载工具的 <code>TTI</code>，或其他工具的总跟踪时间）在 <code>FCP</code> 后发生的每项长任务的阻塞时间的总和。</p><h3 id="如何衡量-tbt" tabindex="-1">如何衡量 TBT? <a class="header-anchor" href="#如何衡量-tbt" aria-label="Permalink to &quot;如何衡量 TBT?&quot;">​</a></h3><p>TBT 是一个应该在实验中衡量的指标。衡量 TBT 的最佳方法是在您的网站上运行 <code>Lighthouse</code> 性能审核。如需了解使用详情，请参阅关于 TBT 的 Lighthouse 文档。</p><p>实验工具 <code>Lighthouse</code><code>WebPageTest</code></p><h2 id="fmp" tabindex="-1">FMP <a class="header-anchor" href="#fmp" aria-label="Permalink to &quot;FMP&quot;">​</a></h2><p><code>First Meaning Paint</code>，首次关键内容绘制，指浏览器渲染出第一个关键内容的时间。不过“关键内容”是难有一个明确定义的，根据应用不同其关键内容也是不一样的。</p><p>FMP 通常也被用来衡量首屏时间。不过 FMP 的计算过于复杂，所以无法使用 API 直接获取，就算计算出来了也不一定就准确，所以连 Lighthouse 在 6.0 版本之后都不再计算这个指标了，取而代之的是 LCP。</p>`,53),e=[o];function t(r,c,y,i,B,A){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{D as __pageData,b as default};
