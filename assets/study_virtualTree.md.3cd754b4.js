import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.82820f36.js";const E=JSON.parse('{"title":"虚拟列表","description":"","frontmatter":{},"headers":[],"relativePath":"study/virtualTree.md","filePath":"study/virtualTree.md","lastUpdated":1739638504000}'),p={name:"study/virtualTree.md"},o=l(`<h1 id="虚拟列表" tabindex="-1">虚拟列表 <a class="header-anchor" href="#虚拟列表" aria-label="Permalink to &quot;虚拟列表&quot;">​</a></h1><p>在现代 Web 开发中，我们经常会遇到需要展示大量数据（如聊天记录、用户列表或日志信息）的场景。然而，直接渲染所有数据不仅会带来性能上的瓶颈，还可能引发内存泄漏等问题。为了优化这类场景，<strong>虚拟列表（Virtual List）</strong> 成为了一种非常有效的解决方案。</p><p>本文将深入探讨虚拟列表的概念，并详细介绍如何实现 <strong>等高虚拟列表</strong> 和 <strong>不等高虚拟列表</strong>。</p><h2 id="什么是虚拟列表" tabindex="-1">什么是虚拟列表？ <a class="header-anchor" href="#什么是虚拟列表" aria-label="Permalink to &quot;什么是虚拟列表？&quot;">​</a></h2><p>虚拟列表是一种通过“延迟渲染”来优化性能的技术。它的核心思想是：只渲染当前可见的几项数据，而忽略那些不在视口中的内容。这种技术特别适用于需要处理大量数据但实际显示区域有限的场景（如长列表或滚动容器）。</p><h3 id="为什么使用虚拟列表" tabindex="-1">为什么使用虚拟列表？ <a class="header-anchor" href="#为什么使用虚拟列表" aria-label="Permalink to &quot;为什么使用虚拟列表？&quot;">​</a></h3><ul><li><strong>提升性能</strong>：减少一次性渲染的数据量，降低 CPU 和 GPU 的负担。</li><li><strong>节省内存</strong>：避免同时存储和渲染所有数据项。</li><li><strong>优化用户体验</strong>：即使在处理大量数据时，页面也能保持流畅的滚动效果。</li></ul><h2 id="虚拟列表的常见类型" tabindex="-1">虚拟列表的常见类型 <a class="header-anchor" href="#虚拟列表的常见类型" aria-label="Permalink to &quot;虚拟列表的常见类型&quot;">​</a></h2><h3 id="_1-等高虚拟列表-fixed-height-virtual-list" tabindex="-1">1. 等高虚拟列表（Fixed Height Virtual List） <a class="header-anchor" href="#_1-等高虚拟列表-fixed-height-virtual-list" aria-label="Permalink to &quot;1. 等高虚拟列表（Fixed Height Virtual List）&quot;">​</a></h3><p>等高虚拟列表是指每一行的高度完全相同。这种类型的虚拟列表实现相对简单，因为所有项的高度一致，可以轻松计算视口内的可见范围。</p><h4 id="实现步骤" tabindex="-1">实现步骤： <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤：&quot;">​</a></h4><ol><li><strong>确定容器高度和滚动区域</strong>：需要知道容器的总高度、每项的高度以及当前滚动位置。</li><li><strong>分页渲染</strong>：根据当前滚动位置，动态计算需要渲染的数据范围，并将其他数据隐藏在 DOM 中或从未创建。</li><li><strong>滚动事件监听</strong>：当用户滚动时，重新计算可见区域并更新渲染的数据。</li></ol><h4 id="示例代码-react" tabindex="-1">示例代码（React）： <a class="header-anchor" href="#示例代码-react" aria-label="Permalink to &quot;示例代码（React）：&quot;">​</a></h4><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">FixedHeightVirtualList</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">items</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">height</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">40</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 每项高度</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">containerHeight</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">500</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 容器高度</span></span>
<span class="line"><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#BD976A;">scrollTop</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">setScrollTop</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">useState</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#BD976A;">startIndex</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">setStartIndex</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">useState</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">handleScroll</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">e</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">setScrollTop</span><span style="color:#666666;">(</span><span style="color:#BD976A;">e</span><span style="color:#666666;">.</span><span style="color:#BD976A;">target</span><span style="color:#666666;">.</span><span style="color:#BD976A;">scrollTop</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 计算当前可见起始索引</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">startIndex</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">floor</span><span style="color:#666666;">(</span><span style="color:#BD976A;">scrollTop</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">/</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">height</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">setStartIndex</span><span style="color:#666666;">(</span><span style="color:#BD976A;">startIndex</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">style</span><span style="color:#666666;">={{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">height</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">containerHeight</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">overflow</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">auto</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">onScroll</span><span style="color:#666666;">={</span><span style="color:#BD976A;">handleScroll</span><span style="color:#666666;">}&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">{</span><span style="color:#BD976A;">items</span><span style="color:#666666;">.</span><span style="color:#80A665;">slice</span><span style="color:#666666;">(</span><span style="color:#BD976A;">startIndex</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">*</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">height</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">startIndex</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">*</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">height</span><span style="color:#666666;">).</span><span style="color:#80A665;">map</span><span style="color:#666666;">((</span><span style="color:#BD976A;">item</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">index</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">key</span><span style="color:#666666;">={</span><span style="color:#BD976A;">index</span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">style</span><span style="color:#666666;">={{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">height</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}}&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">          </span><span style="color:#666666;">{</span><span style="color:#BD976A;">item</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">))}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">FixedHeightVirtualList</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">items</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">height</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">40</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 每项高度</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">containerHeight</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">500</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 容器高度</span></span>
<span class="line"><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">scrollTop</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setScrollTop</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">startIndex</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setStartIndex</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">handleScroll</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">setScrollTop</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">scrollTop</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 计算当前可见起始索引</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">startIndex</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">floor</span><span style="color:#999999;">(</span><span style="color:#B07D48;">scrollTop</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">/</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">height</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">setStartIndex</span><span style="color:#999999;">(</span><span style="color:#B07D48;">startIndex</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">style</span><span style="color:#999999;">={{</span><span style="color:#393A34;"> </span><span style="color:#998418;">height</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">containerHeight</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">overflow</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">auto</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}}</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onScroll</span><span style="color:#999999;">={</span><span style="color:#B07D48;">handleScroll</span><span style="color:#999999;">}&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">{</span><span style="color:#B07D48;">items</span><span style="color:#999999;">.</span><span style="color:#59873A;">slice</span><span style="color:#999999;">(</span><span style="color:#B07D48;">startIndex</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">*</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">height</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">startIndex</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">*</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">height</span><span style="color:#999999;">).</span><span style="color:#59873A;">map</span><span style="color:#999999;">((</span><span style="color:#B07D48;">item</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">index</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">key</span><span style="color:#999999;">={</span><span style="color:#B07D48;">index</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">style</span><span style="color:#999999;">={{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">height</span><span style="color:#393A34;"> </span><span style="color:#999999;">}}&gt;</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#999999;">{</span><span style="color:#B07D48;">item</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">))}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="_2-不等高虚拟列表-variable-height-virtual-list" tabindex="-1">2. 不等高虚拟列表（Variable Height Virtual List） <a class="header-anchor" href="#_2-不等高虚拟列表-variable-height-virtual-list" aria-label="Permalink to &quot;2. 不等高虚拟列表（Variable Height Virtual List）&quot;">​</a></h3><p>不等高虚拟列表是指每一行的高度可能不同。这种类型的虚拟列表实现较为复杂，因为需要动态计算每项的累积高度，并根据滚动位置确定哪些项需要渲染。</p><h4 id="实现步骤-1" tabindex="-1">实现步骤： <a class="header-anchor" href="#实现步骤-1" aria-label="Permalink to &quot;实现步骤：&quot;">​</a></h4><ol><li><strong>预计算高度</strong>：预先为每个数据项计算其高度（可以是固定值或动态计算）。</li><li><strong>累积高度数组</strong>：创建一个累积高度数组，用于快速查找某个索引对应的位置。</li><li><strong>滚动事件监听</strong>：当用户滚动时，通过二分法查找当前可见区域的起始和结束索引，并渲染对应的数据项。</li></ol><h4 id="示例代码-react-1" tabindex="-1">示例代码（React）： <a class="header-anchor" href="#示例代码-react-1" aria-label="Permalink to &quot;示例代码（React）：&quot;">​</a></h4><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">VariableHeightVirtualList</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">items</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#BD976A;">scrollTop</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">setScrollTop</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">useState</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 预计算每项的高度并生成累积高度数组</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">heights</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">items</span><span style="color:#666666;">.</span><span style="color:#80A665;">map</span><span style="color:#666666;">((</span><span style="color:#BD976A;">item</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* 根据需求计算高度 */</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">40</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">cumulativeHeights</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">heights</span><span style="color:#666666;">.</span><span style="color:#80A665;">reduce</span><span style="color:#666666;">((</span><span style="color:#BD976A;">acc</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">curr</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[...</span><span style="color:#BD976A;">acc</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">acc</span><span style="color:#666666;">[</span><span style="color:#BD976A;">acc</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">curr</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">handleScroll</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">e</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">setScrollTop</span><span style="color:#666666;">(</span><span style="color:#BD976A;">e</span><span style="color:#666666;">.</span><span style="color:#BD976A;">target</span><span style="color:#666666;">.</span><span style="color:#BD976A;">scrollTop</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 使用二分法查找当前可见的起始和结束索引</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">startIndex</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">findStartIndex</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cumulativeHeights</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">scrollTop</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">endIndex</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">findEndIndex</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cumulativeHeights</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">scrollTop</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">innerHeight</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">style</span><span style="color:#666666;">={{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">overflow</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">auto</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">onScroll</span><span style="color:#666666;">={</span><span style="color:#BD976A;">handleScroll</span><span style="color:#666666;">}&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">{</span><span style="color:#758575DD;">/* 根据startIndex和endIndex渲染数据 */</span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 辅助函数：查找起始索引</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">findStartIndex</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cumulative</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">target</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">low</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">high</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">cumulative</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">while</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">low</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">high</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">mid</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Math</span><span style="color:#666666;">.</span><span style="color:#80A665;">floor</span><span style="color:#666666;">((</span><span style="color:#BD976A;">low</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">high</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">/</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">cumulative</span><span style="color:#666666;">[</span><span style="color:#BD976A;">mid</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">target</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">low</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">mid</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">high</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">mid</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">low</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">VariableHeightVirtualList</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">items</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">scrollTop</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setScrollTop</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 预计算每项的高度并生成累积高度数组</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">heights</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">items</span><span style="color:#999999;">.</span><span style="color:#59873A;">map</span><span style="color:#999999;">((</span><span style="color:#B07D48;">item</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* 根据需求计算高度 */</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">40</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">cumulativeHeights</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">heights</span><span style="color:#999999;">.</span><span style="color:#59873A;">reduce</span><span style="color:#999999;">((</span><span style="color:#B07D48;">acc</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">curr</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">[...</span><span style="color:#B07D48;">acc</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">acc</span><span style="color:#999999;">[</span><span style="color:#B07D48;">acc</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">curr</span><span style="color:#999999;">],</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#999999;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">handleScroll</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">setScrollTop</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">scrollTop</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 使用二分法查找当前可见的起始和结束索引</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">startIndex</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">findStartIndex</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cumulativeHeights</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">scrollTop</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">endIndex</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">findEndIndex</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cumulativeHeights</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">scrollTop</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">innerHeight</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">style</span><span style="color:#999999;">={{</span><span style="color:#393A34;"> </span><span style="color:#998418;">overflow</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">auto</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}}</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onScroll</span><span style="color:#999999;">={</span><span style="color:#B07D48;">handleScroll</span><span style="color:#999999;">}&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">{</span><span style="color:#A0ADA0;">/* 根据startIndex和endIndex渲染数据 */</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 辅助函数：查找起始索引</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">findStartIndex</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cumulative</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">target</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">low</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">high</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">cumulative</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">while</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">low</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">high</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mid</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">floor</span><span style="color:#999999;">((</span><span style="color:#B07D48;">low</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">high</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">/</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">cumulative</span><span style="color:#999999;">[</span><span style="color:#B07D48;">mid</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">target</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">low</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mid</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">high</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mid</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">low</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="虚拟列表的性能优化" tabindex="-1">虚拟列表的性能优化 <a class="header-anchor" href="#虚拟列表的性能优化" aria-label="Permalink to &quot;虚拟列表的性能优化&quot;">​</a></h2><p>无论哪种类型的虚拟列表，以下几点都可以显著提升性能：</p><ul><li><strong>分页渲染</strong>：只渲染当前可见的数据项。</li><li><strong>动态调整缓存</strong>：保留少量上层和下层数据作为缓存，减少滚动时的重渲次数。</li><li><strong>使用 CSS 优化</strong>：通过 <code>visibility: hidden</code> 或 <code>display: none</code> 隐藏未渲染的内容。</li></ul><h2 id="更高级的虚拟列表实现" tabindex="-1">更高级的虚拟列表实现 <a class="header-anchor" href="#更高级的虚拟列表实现" aria-label="Permalink to &quot;更高级的虚拟列表实现&quot;">​</a></h2><p>为了进一步提升性能和可维护性，可以考虑以下更高级的实现方式：</p><ol><li><strong>委托库</strong>：使用 React 的 <code>useVirtualList</code> 库或其他第三方库。</li><li><strong>手动优化</strong>：通过计算和缓存技术减少 DOM 操作。</li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>虚拟列表是一种非常有用的性能优化技术，尤其适用于需要处理大量数据的场景。无论是等高还是不等高的实现方式，都可以显著提升页面的滚动流畅度和整体性能。选择哪种类型取决于具体需求：如果数据项的高度一致，则使用 <strong>等高虚拟列表</strong> 更为简单；如果高度不固定，则需要实现 <strong>不等高虚拟列表</strong>。</p><p>通过合理的实现和优化，你可以轻松构建高效且响应迅速的虚拟列表组件！</p>`,29),e=[o];function t(r,c,y,A,D,i){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{E as __pageData,C as default};
