import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.82820f36.js";const b=JSON.parse('{"title":"断点续传","description":"","frontmatter":{},"headers":[],"relativePath":"study/skipAndContinue.md","filePath":"study/skipAndContinue.md","lastUpdated":1723977222000}'),o={name:"study/skipAndContinue.md"},i=r('<h1 id="断点续传" tabindex="-1">断点续传 <a class="header-anchor" href="#断点续传" aria-label="Permalink to &quot;断点续传&quot;">​</a></h1><h2 id="什么是断点续传" tabindex="-1">什么是断点续传？ <a class="header-anchor" href="#什么是断点续传" aria-label="Permalink to &quot;什么是断点续传？&quot;">​</a></h2><p>就是下载文件时，不必重头开始下载，而是从指定的位置继续下载，这样的功能就叫做断点续传。</p><p>断点续传的理解可以分为两部分：</p><p>一部分是断点，一部分是续传。断点的由来是在下载过程中，将一个下载文件分成了多个部分，同时进行多个部分一起的下载，当某个时间点，任务被暂停了，此时下载暂停的位置就是断点了。续传就是当一个未完成的下载任务再次开始时，会从上次的断点继续传送。</p><h2 id="如何进行并行上传" tabindex="-1">如何进行并行上传？ <a class="header-anchor" href="#如何进行并行上传" aria-label="Permalink to &quot;如何进行并行上传？&quot;">​</a></h2><p>实现batchPrimise，或者Promise.all，将多个任务并行执行。</p><h2 id="切片上传失败怎么办" tabindex="-1">切片上传失败怎么办？ <a class="header-anchor" href="#切片上传失败怎么办" aria-label="Permalink to &quot;切片上传失败怎么办？&quot;">​</a></h2><p>切片上传失败对流程无影响，刷新页面的情况下，会重新上传失败的切片，或者不刷新页面的时候，前端暂时记录失败的切片，等队列里任务执行完了，再把失败的列表执行一遍。</p><h2 id="上传过程中刷新页面怎么办" tabindex="-1">上传过程中刷新页面怎么办？ <a class="header-anchor" href="#上传过程中刷新页面怎么办" aria-label="Permalink to &quot;上传过程中刷新页面怎么办？&quot;">​</a></h2><p>初始化页面的时候，从后端接口拿到已上传的切片，下次上传时，跳过这些已上传的切片。</p><p>记录成功上传的切片，下次上传时，绕过已上传的切片。</p><h2 id="切片什么时候按数量切-什么时候按大小切" tabindex="-1">切片什么时候按数量切，什么时候按大小切？ <a class="header-anchor" href="#切片什么时候按数量切-什么时候按大小切" aria-label="Permalink to &quot;切片什么时候按数量切，什么时候按大小切？&quot;">​</a></h2><p>文件小的时候按数量切，因为这样能最大程度利用网络优势。</p><p>文件大的时候按大小切，因为这样确保每个切片大小合理且适应变化较大的文件大小。</p><h2 id="如何结合-web-worker-处理大文件上传" tabindex="-1">如何结合 Web Worker 处理大文件上传？ <a class="header-anchor" href="#如何结合-web-worker-处理大文件上传" aria-label="Permalink to &quot;如何结合 Web Worker 处理大文件上传？&quot;">​</a></h2><p>点击上传文件后，使用Web Worker开启一个线程，将文件进行切片和hash。</p><h2 id="如何实现秒传" tabindex="-1">如何实现秒传？ <a class="header-anchor" href="#如何实现秒传" aria-label="Permalink to &quot;如何实现秒传？&quot;">​</a></h2><ol><li>判断文件是否已经存在，如果存在，则直接返回。</li><li>判断文件是否在上传中，如果正在上传，则等待上传完成。</li></ol>',19),n=[i];function l(h,s,d,c,p,u){return e(),t("div",null,n)}const k=a(o,[["render",l]]);export{b as __pageData,k as default};
