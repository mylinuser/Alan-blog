import{_ as s,o as n,c as p,Q as a}from"./chunks/framework.82e0a936.js";const l=""+new URL("interview-difficulty.c241b1ff.png",import.meta.url).href,g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/interview-difficulty.md","filePath":"interview/interview-difficulty.md","lastUpdated":1694189773000}'),o={name:"interview/interview-difficulty.md"},e=a(`<h2 id="面试难题" tabindex="-1">面试难题 <a class="header-anchor" href="#面试难题" aria-label="Permalink to &quot;面试难题&quot;">​</a></h2><ol><li><p>从输入url到显示页面过程<strong>√</strong></p></li><li><p>css优化</p></li><li><p>js优化<strong>√</strong></p></li><li><p>首屏加载速度加快<strong>√</strong></p></li><li><p>为什么页面会短暂白屏<strong>√</strong></p></li><li><p>tree-shaking原理，哪些不会被tree-shaking掉<strong>√</strong></p></li><li><p>es6了解多少，问proxy原理比较多，promise方法，用promise控制执行顺序（resolve解决）</p></li><li><p>type和interface区别<strong>√</strong></p></li><li><p>自定义vue指令(Vue.directive)<strong>√</strong></p></li><li><p>自定义插件。vue.use()</p></li><li><p>自定义hooks<strong>√</strong></p></li><li><p>函数组件state数据存在哪里（内存）<strong>√</strong></p></li><li><p>webpack自定义loader和plugin</p></li><li><p>有啥自己写过的优化，做过的一些优化<strong>√</strong></p></li><li><p>状态码说一说</p></li></ol><p>100-199 用于指定客户端应相应的某些动作。</p><p>200-299 用于表示请求成功。</p><p>300-399 用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息。</p><p>400-499 用于指出客户端的错误。</p><p>500-599 用于支持服务器错误。</p><ol start="16"><li><p>301 302区别，后端是怎么做的（location）</p></li><li><p>同一个页面，只显示A模块，剩下的BCD模块按需加载，滑动到哪里再加载（异步组件）<strong>√</strong></p></li></ol><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">AsyncComponent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#758575DD;">// 需要加载的组件 (应该是一个 Promise 对象)</span></span>
<span class="line"><span style="color:#B8A965;">component</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">import</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">’</span><span style="color:#666666;">.</span><span style="color:#CB7676;">/</span><span style="color:#BD976A;">MyComponent</span><span style="color:#666666;">.</span><span style="color:#BD976A;">vue</span><span style="color:#DBD7CAEE;">’</span><span style="color:#666666;">),</span></span>
<span class="line"><span style="color:#758575DD;">// 异步组件加载时使用的组件</span></span>
<span class="line"><span style="color:#B8A965;">loading</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">LoadingComponent</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#758575DD;">// 加载失败时使用的组件</span></span>
<span class="line"><span style="color:#B8A965;">error</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">ErrorComponent</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#758575DD;">// 展示加载时组件的延时时间。默认值是 200 (毫秒)</span></span>
<span class="line"><span style="color:#B8A965;">delay</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">200</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#758575DD;">// 如果提供了超时时间且组件加载也超时了，</span></span>
<span class="line"><span style="color:#758575DD;">// 则使用加载失败时使用的组件。默认值是：Infinity</span></span>
<span class="line"><span style="color:#B8A965;">timeout</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3000</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">AsyncComponent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#A0ADA0;">// 需要加载的组件 (应该是一个 Promise 对象)</span></span>
<span class="line"><span style="color:#998418;">component</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#59873A;">import</span><span style="color:#999999;">(</span><span style="color:#393A34;">’</span><span style="color:#999999;">.</span><span style="color:#AB5959;">/</span><span style="color:#B07D48;">MyComponent</span><span style="color:#999999;">.</span><span style="color:#B07D48;">vue</span><span style="color:#393A34;">’</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#A0ADA0;">// 异步组件加载时使用的组件</span></span>
<span class="line"><span style="color:#998418;">loading</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">LoadingComponent</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#A0ADA0;">// 加载失败时使用的组件</span></span>
<span class="line"><span style="color:#998418;">error</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ErrorComponent</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#A0ADA0;">// 展示加载时组件的延时时间。默认值是 200 (毫秒)</span></span>
<span class="line"><span style="color:#998418;">delay</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">200</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#A0ADA0;">// 如果提供了超时时间且组件加载也超时了，</span></span>
<span class="line"><span style="color:#A0ADA0;">// 则使用加载失败时使用的组件。默认值是：Infinity</span></span>
<span class="line"><span style="color:#998418;">timeout</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3000</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>defineAsyncComponent</p><p><img src="`+l+'" alt="Untitled"></p><ol start="18"><li><p>vue首次渲染过程？从头到尾，什么路由怎么执行之类的<strong>√</strong></p></li><li><p>跨项目传值，多页面应用</p></li><li><p>发布npm包过程<strong>√</strong></p></li></ol><p>npm adduser</p><p>npm publish</p><ol start="21"><li>设置css权重</li></ol><p><strong>权重的等级</strong></p><p>（1）!important,加在样式属性值后，权重值为10000</p><p>（2）内联样式，如：style=“”，权重值为1000</p><p>（3）ID选择器，如：#content，权重值为100</p><p>（4）类，伪类和属性选择器，如：content、：hover权重值为10</p><p>（5）标签选择器和伪元素选择器，如：div,p,:before权重值为1</p><p>（6）通用选择器（ * ) 、子选择器（&gt;）、相邻选择器（+）、同胞选择器（~）、权重值为0</p><ol start="22"><li><p>项目的一个总结</p></li><li><p>自己的不足？优缺点</p></li></ol>',23),t=[e];function r(c,i,y,A,D,m){return n(),p("div",null,t)}const u=s(o,[["render",r]]);export{g as __pageData,u as default};
