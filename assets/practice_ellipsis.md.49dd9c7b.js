import{_ as s,o as n,c as a,Q as t}from"./chunks/framework.82820f36.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"practice/ellipsis.md","filePath":"practice/ellipsis.md","lastUpdated":1694189773000}'),e={name:"practice/ellipsis.md"},l=t(`<h2 id="css-超出部分省略号显示" tabindex="-1">CSS- 超出部分省略号显示 <a class="header-anchor" href="#css-超出部分省略号显示" aria-label="Permalink to &quot;CSS- 超出部分省略号显示&quot;">​</a></h2><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#DBD7CAEE;">display: -webkit-box; // </span><span style="color:#4D9375;">webkit-box</span></span>
<span class="line"><span style="color:#4D9375;">text-overflow</span><span style="color:#DBD7CAEE;">: ellipsis; // 显示方式 - 省略号</span></span>
<span class="line"><span style="color:#DBD7CAEE;">overflow: hidden; // 超出部分省略</span></span>
<span class="line"><span style="color:#DBD7CAEE;">-webkit-line-clamp: 1; // 超出一行省略</span></span>
<span class="line"><span style="color:#DBD7CAEE;">-webkit-box-orient: vertical; //上下垂直</span></span>
<span class="line"><span style="color:#4D9375;">white-space</span><span style="color:#DBD7CAEE;">: nowrap; // 规定段落中的文本不进行换行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">// 子标签</span></span>
<span class="line"><span style="color:#DBD7CAEE;">display: </span><span style="color:#4D9375;">inline-block</span><span style="color:#DBD7CAEE;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393A34;">display: -webkit-box; // </span><span style="color:#1E754F;">webkit-box</span></span>
<span class="line"><span style="color:#1E754F;">text-overflow</span><span style="color:#393A34;">: ellipsis; // 显示方式 - 省略号</span></span>
<span class="line"><span style="color:#393A34;">overflow: hidden; // 超出部分省略</span></span>
<span class="line"><span style="color:#393A34;">-webkit-line-clamp: 1; // 超出一行省略</span></span>
<span class="line"><span style="color:#393A34;">-webkit-box-orient: vertical; //上下垂直</span></span>
<span class="line"><span style="color:#1E754F;">white-space</span><span style="color:#393A34;">: nowrap; // 规定段落中的文本不进行换行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">// 子标签</span></span>
<span class="line"><span style="color:#393A34;">display: </span><span style="color:#1E754F;">inline-block</span><span style="color:#393A34;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>text-overflow</strong> 属性指定当文本溢出包含它的元素时，应该如何显示。可以设置溢出后，文本被剪切、显示省略号 (...) 或显示自定义字符串（不是所有浏览器都支持）。</p><p><strong>text-overflow的属性</strong></p><table><thead><tr><th>clip</th><th>剪切文本。</th></tr></thead><tbody><tr><td>ellipsis</td><td>显示省略符号 ... 来代表被修剪的文本。</td></tr><tr><td>string</td><td>使用给定的字符串来代表被修剪的文本。</td></tr><tr><td>initial</td><td>设置为属性默认值。阅读关于 initial</td></tr><tr><td>inherit</td><td>从父元素继承该属性值。 阅读关于 inherit</td></tr></tbody></table><p><strong>line-clamp</strong>属性可以限制在一个块元素显示的文本的行数，为了实现该效果，它需要组合其他外来的WebKit属性，添加**-WebKit-**前缀。</p><p><strong>white-space的属性</strong></p><table><thead><tr><th>normal</th><th>默认。空白会被浏览器忽略。</th></tr></thead><tbody><tr><td>pre</td><td>空白会被浏览器保留。其行为方式类似 HTML 中的 &lt;pre&gt; 标签。</td></tr><tr><td>nowrap</td><td>文本不会换行，文本会在在同一行上继续，直到遇到 &lt;br&gt; 标签为止。</td></tr><tr><td>pre-wrap</td><td>保留空白符序列，但是正常地进行换行。</td></tr><tr><td>pre-line</td><td>合并空白符序列，但是保留换行符。</td></tr><tr><td>inherit</td><td>规定应该从父元素继承 white-space 属性的值。</td></tr></tbody></table>`,8),p=[l];function r(o,i,c,d,b,h){return n(),a("div",null,p)}const _=s(e,[["render",r]]);export{m as __pageData,_ as default};
