import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.82e0a936.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/some-topic.md","filePath":"interview/some-topic.md","lastUpdated":1694189773000}'),p={name:"interview/some-topic.md"},o=l(`<h2 id="_1、计算机网络七层协议" tabindex="-1">1、计算机网络七层协议： <a class="header-anchor" href="#_1、计算机网络七层协议" aria-label="Permalink to &quot;1、计算机网络七层协议：&quot;">​</a></h2><p>应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</p><h2 id="_2、object-assign的用法" tabindex="-1">2、Object.assign的用法： <a class="header-anchor" href="#_2、object-assign的用法" aria-label="Permalink to &quot;2、Object.assign的用法：&quot;">​</a></h2><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">obj1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#B8A965;">a</span><span style="color:#666666;">:</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">B</span><span style="color:#666666;">:{</span><span style="color:#B8A965;">c</span><span style="color:#666666;">:</span><span style="color:#4C9A91;">0</span><span style="color:#666666;">}};</span></span>
<span class="line"><span style="color:#BD976A;">Let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">obj2</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Object</span><span style="color:#666666;">.</span><span style="color:#80A665;">assign</span><span style="color:#666666;">({},</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">obj1</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// 对象的合并</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">obj</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Object</span><span style="color:#666666;">.</span><span style="color:#80A665;">assign</span><span style="color:#666666;">(</span><span style="color:#BD976A;">o1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">o2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">o3</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">相同属性后面的会覆盖前面的</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">obj1</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#998418;">a</span><span style="color:#999999;">:</span><span style="color:#2F798A;">0</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">B</span><span style="color:#999999;">:{</span><span style="color:#998418;">c</span><span style="color:#999999;">:</span><span style="color:#2F798A;">0</span><span style="color:#999999;">}};</span></span>
<span class="line"><span style="color:#B07D48;">Let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">obj2</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Object</span><span style="color:#999999;">.</span><span style="color:#59873A;">assign</span><span style="color:#999999;">({},</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">obj1</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// 对象的合并</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">obj</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Object</span><span style="color:#999999;">.</span><span style="color:#59873A;">assign</span><span style="color:#999999;">(</span><span style="color:#B07D48;">o1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">o2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">o3</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">相同属性后面的会覆盖前面的</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 深拷贝代码：</span></span>
<span class="line"><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">parse</span><span style="color:#666666;">(</span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringfy</span><span style="color:#666666;">(</span><span style="color:#BD976A;">test</span><span style="color:#666666;">));</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">deepCody</span><span style="color:#666666;">(</span><span style="color:#BD976A;">newobj</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">oldobj</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">	</span><span style="color:#4D9375;">for</span><span style="color:#666666;">(</span><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">k</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">oldobj</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">item</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">old</span><span style="color:#666666;">[</span><span style="color:#BD976A;">k</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#4D9375;">if</span><span style="color:#666666;">(</span><span style="color:#BD976A;">item</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">instanceof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Array</span><span style="color:#666666;">){</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">			</span><span style="color:#BD976A;">newobj</span><span style="color:#666666;">[</span><span style="color:#BD976A;">k</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[];</span></span>
<span class="line"><span style="color:#DBD7CAEE;">			</span><span style="color:#80A665;">deepCopy</span><span style="color:#666666;">(</span><span style="color:#BD976A;">newobj</span><span style="color:#666666;">[</span><span style="color:#BD976A;">k</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">item</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">if</span><span style="color:#666666;">(</span><span style="color:#BD976A;">item</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">instanceof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Object</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">				</span><span style="color:#BD976A;">newobj</span><span style="color:#666666;">[</span><span style="color:#BD976A;">k</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{};</span></span>
<span class="line"><span style="color:#DBD7CAEE;">				</span><span style="color:#80A665;">deepCopy</span><span style="color:#666666;">(</span><span style="color:#BD976A;">newobj</span><span style="color:#666666;">[</span><span style="color:#BD976A;">k</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">item</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#BD976A;">newobj</span><span style="color:#666666;">[</span><span style="color:#BD976A;">k</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">item</span></span>
<span class="line"><span style="color:#DBD7CAEE;">	 </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 深拷贝代码：</span></span>
<span class="line"><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">parse</span><span style="color:#999999;">(</span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringfy</span><span style="color:#999999;">(</span><span style="color:#B07D48;">test</span><span style="color:#999999;">));</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">deepCody</span><span style="color:#999999;">(</span><span style="color:#B07D48;">newobj</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">oldobj</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">	</span><span style="color:#1E754F;">for</span><span style="color:#999999;">(</span><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">k</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">in</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">oldobj</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">item</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">old</span><span style="color:#999999;">[</span><span style="color:#B07D48;">k</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#1E754F;">if</span><span style="color:#999999;">(</span><span style="color:#B07D48;">item</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">instanceof</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Array</span><span style="color:#999999;">){</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">			</span><span style="color:#B07D48;">newobj</span><span style="color:#999999;">[</span><span style="color:#B07D48;">k</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">[];</span></span>
<span class="line"><span style="color:#393A34;">			</span><span style="color:#59873A;">deepCopy</span><span style="color:#999999;">(</span><span style="color:#B07D48;">newobj</span><span style="color:#999999;">[</span><span style="color:#B07D48;">k</span><span style="color:#999999;">],</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">item</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">if</span><span style="color:#999999;">(</span><span style="color:#B07D48;">item</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">instanceof</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Object</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">				</span><span style="color:#B07D48;">newobj</span><span style="color:#999999;">[</span><span style="color:#B07D48;">k</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{};</span></span>
<span class="line"><span style="color:#393A34;">				</span><span style="color:#59873A;">deepCopy</span><span style="color:#999999;">(</span><span style="color:#B07D48;">newobj</span><span style="color:#999999;">[</span><span style="color:#B07D48;">k</span><span style="color:#999999;">],</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">item</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#B07D48;">newobj</span><span style="color:#999999;">[</span><span style="color:#B07D48;">k</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">item</span></span>
<span class="line"><span style="color:#393A34;">	 </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_3、进程与线程区别" tabindex="-1">3、进程与线程区别 <a class="header-anchor" href="#_3、进程与线程区别" aria-label="Permalink to &quot;3、进程与线程区别&quot;">​</a></h2><ul><li><p>进程要分配一大部分的内存，而线程只需要分配一部分栈就可以了.</p></li><li><p>一个程序至少有一个进程,一个进程至少有一个线程.</p></li><li><p>进程是资源分配的最小单位，线程是程序执行的最小单位。</p></li><li><p>一个线程可以创建和撤销另一个线程，同一个进程中的多个线程之间可以并发执行.</p></li><li><p><strong>进程之间的是怎么进行交互的呢？</strong></p></li></ul><p>通过TCP/IP的端口来实现</p><ul><li><strong>线程之间又是怎样进行交互？</strong></li></ul><p>线程的通信就比较简单，有一大块共享的内存，只要大家的指针是同一个就可以看到各自的内存。</p><h2 id="_4、vite的优点" tabindex="-1">4、Vite的优点 <a class="header-anchor" href="#_4、vite的优点" aria-label="Permalink to &quot;4、Vite的优点&quot;">​</a></h2><p>vite是使用rollup进行打包的</p><p>1、慢启动的优化，不进行打包，直接编译</p><p>2、每个文件通过 http 头缓存在浏览器端，当编辑完一个文件，只需让此文件缓存失效。当基于 ES module 进行热更新时，仅需更新失效的模块，这使得更新时间不随包的增大而增大。</p><p>3、组件热更新，修改完立马重新编译</p><p><a href="https://www.cnblogs.com/fayin/p/14234872.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/fayin/p/14234872.html</a></p><h2 id="_5、vue3的改变" tabindex="-1">5、Vue3的改变 <a class="header-anchor" href="#_5、vue3的改变" aria-label="Permalink to &quot;5、Vue3的改变&quot;">​</a></h2><p>1、setup，把Vue2的一些optionAPI改成了compositionAPI</p><p>2、对代码进行分析，给动态的内容添加标注，每次更新只更新标注内容，按需加载（进行了tree shaking），加快了速度(用ESM进行代码静态分析，ESM需要一开始就引用，因为需要知道哪些代码是需要的)</p><p>3、从Object.defineProperty改成了用Proxy</p><h2 id="_6、package-json里的属性意义" tabindex="-1">6、package.json里的属性意义 <a class="header-anchor" href="#_6、package-json里的属性意义" aria-label="Permalink to &quot;6、package.json里的属性意义&quot;">​</a></h2><ul><li><code>version</code> 表明了当前的版本。</li><li><code>name</code> 设置了应用程序/软件包的名称。</li><li><code>description</code> 是应用程序/软件包的简短描述。</li><li><code>main</code> 设置了应用程序的入口点。</li><li><code>private</code> 如果设置为 <code>true</code>，则可以防止应用程序/软件包被意外地发布到 <code>npm</code>。</li><li><code>scripts</code> 定义了一组可以运行的 node 脚本。</li><li><code>dependencies</code> 设置了作为依赖安装的 <code>npm</code> 软件包的列表。</li><li><code>devDependencies</code> 设置了作为开发依赖安装的 <code>npm</code> 软件包的列表。</li><li><code>engines</code> 设置了此软件包/应用程序在哪个版本的 Node.js 上运行。</li><li><code>browserslist</code> 用于告知要支持哪些浏览器（及其版本）。</li></ul>`,22),e=[o];function t(c,r,y,i,D,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{E as __pageData,d as default};
