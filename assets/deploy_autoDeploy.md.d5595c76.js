import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.82820f36.js";const l="/Alan-blog/assets/autodeploy1.1d58cfc1.jpg",p="/Alan-blog/assets/autodeploy2.e0283953.jpg",o="/Alan-blog/assets/autodeploy3.fb77a7c5.jpg",t="/Alan-blog/assets/autodeploy4.d39115b7.png",i="/Alan-blog/assets/autodeploy5.c5bbf80b.jpg",c="/Alan-blog/assets/autodeploy6.fd7a7dae.jpg",q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"deploy/autoDeploy.md","filePath":"deploy/autoDeploy.md","lastUpdated":1717594217000}'),r={name:"deploy/autoDeploy.md"},d=e('<h2 id="自动化部署" tabindex="-1">自动化部署 <a class="header-anchor" href="#自动化部署" aria-label="Permalink to &quot;自动化部署&quot;">​</a></h2><h2 id="jenkins全局配置ssh" tabindex="-1">Jenkins全局配置SSH <a class="header-anchor" href="#jenkins全局配置ssh" aria-label="Permalink to &quot;Jenkins全局配置SSH&quot;">​</a></h2><p><img src="'+l+'" alt="ssh"></p><h2 id="配置构建git参数" tabindex="-1">配置构建Git参数 <a class="header-anchor" href="#配置构建git参数" aria-label="Permalink to &quot;配置构建Git参数&quot;">​</a></h2><p>新建一个自由风格的项目，配置构建Git参数barnch和环境env <img src="'+p+'" alt="ssh"></p><h2 id="配置源码" tabindex="-1">配置源码 <a class="header-anchor" href="#配置源码" aria-label="Permalink to &quot;配置源码&quot;">​</a></h2><p>配置git源码管理</p><ul><li>设置仓库地址</li><li>设置github账号凭证</li><li>设置分支参数，使用上面设置的git参数${branch} <img src="'+o+'" alt="ssh"></li></ul><h2 id="配置触发器" tabindex="-1">配置触发器 <a class="header-anchor" href="#配置触发器" aria-label="Permalink to &quot;配置触发器&quot;">​</a></h2><ul><li>设置触发构建的行为为：代码提交触发</li><li>设置select text凭证：需要到github上面设置，具体路径为setting -&gt; Developer setting -&gt; Personal access tokens -&gt; tokens(classic) -&gt; Generate new token(classic) -&gt; 输入密码 -&gt; 设置Node(随便起个名字) -&gt; 设置权限(repo全选、admin：repo_hook全选) -&gt; Generate token</li><li>设置使用node环境(需要安装node插件，并且在系统管理-&gt;全局工具配置里面配置好node版本，服务器还需要安装nvm来控制node指定版本和jenkins设置的最好对上) <img src="'+t+`" alt="ssh"></li></ul><h2 id="配置构建步骤" tabindex="-1">配置构建步骤 <a class="header-anchor" href="#配置构建步骤" aria-label="Permalink to &quot;配置构建步骤&quot;">​</a></h2><p>点击增加构建步骤，选择执行Shell，然后填写构建步骤</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">#!/usr/bin/env bash</span></span>
<span class="line"><span style="color:#dbd7caee;">node -v</span></span>
<span class="line"><span style="color:#dbd7caee;">npm config set registry https://registry.npmmirror.com</span></span>
<span class="line"><span style="color:#dbd7caee;">npm i</span></span>
<span class="line"><span style="color:#dbd7caee;">npm run build</span></span>
<span class="line"><span style="color:#dbd7caee;">echo $branch</span></span>
<span class="line"><span style="color:#dbd7caee;">if test $env = &quot;test&quot;; then</span></span>
<span class="line"><span style="color:#dbd7caee;">echo &quot;test&quot;</span></span>
<span class="line"><span style="color:#dbd7caee;">else</span></span>
<span class="line"><span style="color:#dbd7caee;">echo &quot;prod&quot;</span></span>
<span class="line"><span style="color:#dbd7caee;">fi</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">#!/usr/bin/env bash</span></span>
<span class="line"><span style="color:#393a34;">node -v</span></span>
<span class="line"><span style="color:#393a34;">npm config set registry https://registry.npmmirror.com</span></span>
<span class="line"><span style="color:#393a34;">npm i</span></span>
<span class="line"><span style="color:#393a34;">npm run build</span></span>
<span class="line"><span style="color:#393a34;">echo $branch</span></span>
<span class="line"><span style="color:#393a34;">if test $env = &quot;test&quot;; then</span></span>
<span class="line"><span style="color:#393a34;">echo &quot;test&quot;</span></span>
<span class="line"><span style="color:#393a34;">else</span></span>
<span class="line"><span style="color:#393a34;">echo &quot;prod&quot;</span></span>
<span class="line"><span style="color:#393a34;">fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="配置构建后步骤" tabindex="-1">配置构建后步骤 <a class="header-anchor" href="#配置构建后步骤" aria-label="Permalink to &quot;配置构建后步骤&quot;">​</a></h2><p>设置这个失败了好几次，有时候是github无法连接443，有时候是包上传失败或者其他原因，比较玄学，后来突然好了</p><ul><li>点击增加构建后操作步骤，选择发送包到SSH那个选项</li><li>把之前配置的全局SSH选上</li><li>配置上传哪些文件，dist/**/**</li><li>配置去掉的文件前缀，把dist去掉</li><li>配置上传到服务器哪个文件，/docs/\${env}，根据环境放不同文件夹 <img src="`+i+`" alt="ssh"></li></ul><h2 id="配置nginx" tabindex="-1">配置nginx <a class="header-anchor" href="#配置nginx" aria-label="Permalink to &quot;配置nginx&quot;">​</a></h2><ul><li>设置监听端口为8899(如果没法访问，看看是不是防火墙没关，或者安全组没开放端口)</li><li>server_name为转发地址，这里只是本地静态资源转发，所以填localhost，如果是转发其他机器上，就填那个机器的ip或者域名</li><li>root设置默认请求地址，主页为index.html</li><li>把访问包含/Alan-blog/路径的请求，全部转发到访问服务器/docs/test/的静态地址上</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">server {</span></span>
<span class="line"><span style="color:#dbd7caee;">    listen 8899;</span></span>
<span class="line"><span style="color:#dbd7caee;">    server_name localhost;</span></span>
<span class="line"><span style="color:#dbd7caee;">    root /docs/test;</span></span>
<span class="line"><span style="color:#dbd7caee;">    index index.html index.htm default.html default.htm;</span></span>
<span class="line"><span style="color:#dbd7caee;"></span></span>
<span class="line"><span style="color:#dbd7caee;">    location ^~ /Alan-blog/ {</span></span>
<span class="line"><span style="color:#dbd7caee;">        alias /docs/test/;</span></span>
<span class="line"><span style="color:#dbd7caee;">    }</span></span>
<span class="line"><span style="color:#dbd7caee;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">server {</span></span>
<span class="line"><span style="color:#393a34;">    listen 8899;</span></span>
<span class="line"><span style="color:#393a34;">    server_name localhost;</span></span>
<span class="line"><span style="color:#393a34;">    root /docs/test;</span></span>
<span class="line"><span style="color:#393a34;">    index index.html index.htm default.html default.htm;</span></span>
<span class="line"><span style="color:#393a34;"></span></span>
<span class="line"><span style="color:#393a34;">    location ^~ /Alan-blog/ {</span></span>
<span class="line"><span style="color:#393a34;">        alias /docs/test/;</span></span>
<span class="line"><span style="color:#393a34;">    }</span></span>
<span class="line"><span style="color:#393a34;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="配置域名" tabindex="-1">配置域名 <a class="header-anchor" href="#配置域名" aria-label="Permalink to &quot;配置域名&quot;">​</a></h2><ul><li>网上找个靠谱的网站购买域名，比如阿里云、腾讯云、华为云等等，最好是和购买服务器同一家</li><li>购买后，需要实名认证并且备案，按照网站指引进行操作即可</li><li>实名认证后，设置域名的ip，一般在域名解析功能页面</li><li>选择记录类型，一般为A，代表IPV4，不用管</li><li>填写主机记录，这个是域名前缀，最好新建三条，分别写*、www、@</li><li>填写记录值，直接写服务器ip即可 <img src="`+c+'" alt="ssh"></li></ul><h2 id="访问域名" tabindex="-1">访问域名 <a class="header-anchor" href="#访问域名" aria-label="Permalink to &quot;访问域名&quot;">​</a></h2><p>都配置好后，直接访问域名，这时候可能页面无响应(需要加上刚刚nginx设置的转发端口8899)</p>',23),b=[d];function h(u,m,y,g,_,v){return a(),n("div",null,b)}const k=s(r,[["render",h]]);export{q as __pageData,k as default};
